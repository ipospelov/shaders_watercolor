function rgb (v1, v2, v3) {
    return [v1, v2, v3];
}

var palettes = [
    [
        [
            rgb(42, 9, 68),
            rgb(63, 167, 150),
            rgb(254, 194, 96),
            rgb(161, 0, 53)
        ],
        [
            rgb(0, 8, 57),
            rgb(110, 144, 134),
            rgb(255, 164, 27),
            rgb(222, 53, 106),
        ],
    ],
    [
        [
            rgb(132, 84, 96),
            rgb(234, 211, 203),
            rgb(189, 199, 201),
            rgb(43, 79, 96)
        ],
        [
            rgb(132, 84, 96),
            rgb(242, 235, 233),
            rgb(165, 190, 204),
            rgb(49, 107, 131)
        ],
    ],
    [
        [
            rgb(247, 247, 247),
            rgb(133, 14, 53),
            rgb(57, 62, 70),
            rgb(146, 154, 171)
        ],
        [
            rgb(251, 248, 241),
            rgb(159, 30, 73),
            rgb(67, 66, 66),
            rgb(109, 130, 153)
        ],
    ],
    [
        [
            rgb(189, 199, 201),
            rgb(43, 79, 96),
            rgb(255, 196, 196),
            rgb(133, 14, 53)
        ],
        [
            rgb(165, 190, 204),
            rgb(36, 58, 115),
            rgb(255, 196, 196),
            rgb(133, 14, 53)
        ],
    ],
    [
        [
            rgb(4, 28, 50),
            rgb(163, 199, 214),
            rgb(6, 70, 99),
            rgb(236, 179, 101),
        ],
        [
            rgb(4, 28, 50),
            rgb(95, 157, 247),
            rgb(0, 18, 83),
            rgb(242, 211, 136),
        ]
    ],
    [
        [
            rgb(247, 247, 247),
            rgb(6, 70, 99),
            rgb(57, 62, 70),
            rgb(146, 154, 171)
        ],
        [
            rgb(247, 247, 247),
            rgb(13, 76, 146),
            rgb(57, 62, 70),
            rgb(146, 154, 171)
        ],
    ],
    [
        [
            rgb(81, 50, 82),
            rgb(122, 64, 105),
            rgb(202, 78, 121),
            rgb(255, 193, 142)
        ],
        [
            rgb(42, 9, 68),
            rgb(59, 24, 95),
            rgb(161, 37, 104),
            rgb(254, 194, 96)
        ]
    ],
    [
        [
            rgb(0, 0, 0),
            rgb(26, 77, 46),
            rgb(255, 159, 41),
            rgb(250, 243, 227)
        ],
        [
            rgb(57, 62, 70),
            rgb(85, 113, 83),
            rgb(240, 165, 0),
            rgb(247, 247, 247)
        ]
    ],
    [
        [
            rgb(230, 161, 87),
            rgb(201, 117, 61),
            rgb(151, 58, 58),
            rgb(91, 37, 45)
        ],
        [
            rgb(254, 190, 140),
            rgb(239, 154, 83),
            rgb(172, 68, 37),
            rgb(153, 0, 0)
        ]
    ],
    [
        [
            rgb(74, 64, 58),
            rgb(164, 93, 93),
            rgb(255, 192, 105),
            rgb(239, 239, 239)
        ],
        [
            rgb(72, 52, 52),
            rgb(200, 149, 149),
            rgb(229, 137, 10),
            rgb(255, 248, 234)
        ]
    ],
    [
        [
            rgb(231, 231, 222),
            rgb(0, 136, 145),
            rgb(0, 88, 122),
            rgb(15, 48, 87)
        ],
        [
            rgb(255, 248, 234),
            rgb(0, 136, 145),
            rgb(6, 70, 99),
            rgb(36, 58, 115),
        ]
    ],
    [
        [
            rgb(238, 237, 237),
            rgb(92, 110, 145),
            rgb(143, 56, 77),
            rgb(221, 152, 102)
        ],
        [
            rgb(255, 248, 234),
            rgb(6, 70, 99),
            rgb(133, 14, 53),
            rgb(229, 137, 10),
        ]
    ],
    [
        [
            rgb(250, 243, 221),
            rgb(100, 149, 143),
            rgb(15, 48, 87),
            rgb(229, 137, 10),
        ],
        [
            rgb(255, 248, 234),
            rgb(163, 199, 214),
            rgb(6, 70, 99),
            rgb(255, 159, 41),
        ]
    ],
    [
        [
            rgb(65, 21, 48),
            rgb(209, 81, 45),
            rgb(255, 159, 41),
            rgb(245, 232, 228)
        ],
        [
            rgb(66, 3, 44),
            rgb(172, 68, 37),
            rgb(229, 137, 10),
            rgb(255, 248, 234)
        ]
    ],
    [
        [
            rgb(44, 54, 57),
            rgb(63, 78, 79),
            rgb(162, 123, 92),
            rgb(220, 215, 201)
        ],
        [
            rgb(57, 62, 70),
            rgb(15, 61, 62),
            rgb(170, 139, 86),
            rgb(240, 235, 206)
        ]
    ],
    [
        [
            rgb(54, 39, 6),
            rgb(70, 78, 46),
            rgb(229, 137, 10),
            rgb(233, 229, 214)
        ],
        [
            rgb(60, 35, 23),
            rgb(95, 113, 97),
            rgb(229, 137, 10),
            rgb(255, 248, 234)
        ]
    ],
    [
        [
            rgb(123, 17, 58),
            rgb(21, 14, 86),
            rgb(21, 151, 187),
            rgb(143, 214, 225)
        ],
        [
            rgb(133, 14, 53),
            rgb(0, 18, 83),
            rgb(58, 136, 145),
            rgb(180, 205, 230)
        ]
    ],
    [
        [
            rgb(44, 6, 31),
            rgb(55, 64, 69),
            rgb(216, 146, 22),
            rgb(225, 216, 159)
        ],
        [
            rgb(84, 18, 18),
            rgb(67, 66, 66),
            rgb(255, 159, 41),
            rgb(229, 217, 182)
        ]
    ],
    [
        [
            rgb(6, 70, 53),
            rgb(81, 146, 89),
            rgb(240, 187, 98),
            rgb(244, 238, 169)
        ],
        [
            rgb(28, 103, 88),
            rgb(61, 131, 97),
            rgb(198, 151, 73),
            rgb(238, 242, 230)
        ]
    ],
    [
        [
            rgb(31, 29, 54),
            rgb(63, 51, 81),
            rgb(134, 72, 121),
            rgb(233, 166, 166)
        ],
        [
            rgb(42, 9, 68),
            rgb(59, 24, 95),
            rgb(122, 64, 105),
            rgb(255, 193, 142),
        ]
    ]
]

function mixColors(color1, color2, intensity) {
    return color1.map((n, i) => {
        var diff = color2[i] - n;
        var toAdd = map(intensity, 0, 1, 0, diff);
        return n + toAdd
    });
}

var colorRanges = [
    [0, 0.1],
    [0.1, 0.2],
    [0.2, 0.3],
    [0.3, 0.4],
    [0.4, 0.5],
    [0.5, 0.6],
    [0.6, 0.7],
    [0.7, 0.8],
    [0.8, 0.9],
    [0.9, 1]
]

function multipleMixColors(color1, color2, height, noiseGenerator) {
    var p1 = 0, p2 = 1;
    for (var range of noiseGenerator.colorPercentiles) {
        p1 = range[0];
        p2 = range[1];
        if (height >= p1 & height <= p2) {
            break;
        }
    }

   var intensity = map(height, p1, p2, 0, 1.5);
   intensity = constrain(intensity, 0, 1);
   return mixColors(color1, color2, intensity);
}
