class StripePainter{constructor(t,e,s,r,i,n,h,a){Object.assign(this,{x:t,y:e,ang:s,h:r,n:i,margin:n,colors:h,uniforms:a}),this.nCurrent=0,this.seed=fxrand()}getColor(){return this.colors}draw(){if(this.nCurrent>=this.n)return 0;let t=this.nCurrent*this.margin,[e,s]=getDecart(t,this.ang);e+=this.x,s+=this.y;let[r,i]=getDecart(this.h,this.ang+Math.PI/2);if(r+=e,i+=s,outOfScene(e,s)&outOfScene(r,i))return this.nCurrent++,1;let n={...this.uniforms,u_seed:this.seed};return drawCurve(e,s,r,i,...this.getColor(),n),this.nCurrent++,1}}class LineStripePainter extends NestedPainter{constructor(t,e,s,r,i,n,h,a,u,o){super();let l=r+i;for(let i=0;i<n;i++){let[n,c]=getDecart(l*i,s+Math.PI/2);n+=t,c+=e;let f=new StripePainter(n,c,s,r,h,a,u,o);this.painters.push(f)}}}class RectanglePainter{constructor(t,e,s,r,i,n,h={}){let a,u=h.u_width||defaultCurveWidth;a=i?7e-5*s/u:7e-5*r/u,Object.assign(this,{x:t,y:e,w:s,h:r,n:a,axis:i,colors:n,uniforms:h}),this.nCurrent=0,this.step=i?s/Math.max(1,a-1):r/Math.max(1,a-1),this.seed=fxrand()}getColor(t,e){return t>xBufferSize/2-100&t<xBufferSize/2+100?palettes[1][5]:this.colors}draw(){if(this.nCurrent>=this.n)return 0;let t,e,s,r;if(this.axis?(t=this.x+this.step*this.nCurrent,e=t,s=this.y,r=this.y+this.h):(t=this.x,e=t+this.w,s=this.y+this.step*this.nCurrent,r=s),outOfScene(t,s)&outOfScene(e,r))return this.nCurrent++,1;let i=this.getColor(t,s),n={...this.uniforms,u_seed:this.seed};return drawCurve(t,s,e,r,...i,n),this.nCurrent++,1}}class ManyStripesPainter extends NestedPainter{constructor(t,e,s,r,i,n,h){super();let a=(r-100*(i-1))/max(1,i);for(let r=0;r<i;r++){let i=(a+100)*r+e,n=t+fxRandRanged(-200,200),u=palettes[1][r%palettes[1].length],o=new RectanglePainter(n,i,s,a,1,u,h);this.painters.push(o)}}}