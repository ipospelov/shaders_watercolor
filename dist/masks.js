class NoiseCache{constructor(e=.005,t=0,a=1,r=.05){this.step=e,this.percentilesCache={},this.seedStep=t,this.coef=a,this.colorPercentiles=[],e=r;for(var i=0;i<=1;i+=e)this.colorPercentiles.push([this.getPercentile(i),this.getPercentile(i+e)])}get(e,t){return noise(e*this.step+this.seedStep,t*this.step+this.seedStep)*this.coef}getPercentile(e){var t=this.percentilesCache[e];if(t)return t;e>1?e=1:e<0&&(e=0);for(var a=[],r=0;r<xBufferSize;r+=20)for(var i=0;i<yBufferSize;i+=20)a.push(this.get(r,i));a.sort((function(e,t){return e-t}));var n=a[Math.floor((a.length-1)*e)];return this.percentilesCache[e]=n,n}}class Scene{constructor(){this.flowNoise=new NoiseCache(9e-4,0,340),this.colorNoise=new NoiseCache(.001,1231),this.colorNoise2=new NoiseCache(.001,1231,1,.2);var e=delParams.step;this.circleNoise=new NoiseCache(e),this.delimeterNoise=new NoiseCache(e),this.noiseByArea={0:this.flowNoise,1:this.circleNoise,2:this.flowNoise,3:this.circleNoise},this.isRevertedByArea={0:!1,1:!1,2:!0,3:!0},this.delimeterPercentiles=delParams.percentiles}setDefaultArea(e){this.defaultArea=e}isLeftArea(e){return this.defaultArea!==e}getPointStyle(e,t){var a=this.getArea(e,t),r=this.noiseByArea[a].get(e,t);if(a<2)var i=this.colorNoise.get(e,t),n=this.getColor(i,a,this.colorNoise);else i=this.colorNoise2.get(e,t),n=this.getColor(i,a,this.colorNoise2);return{area:a,noise:r,color:n}}getArea(e,t){return this.getAreaByDelimeter(e,t)}getAreaByDelimeter(e,t){var a=this.delimeterNoise.get(e,t),r=0;for(var i of this.delimeterPercentiles){var n=i[0],s=i[1];a<this.delimeterNoise.getPercentile(s)&a>this.delimeterNoise.getPercentile(n)&&(r=1)}return r}getFillColor(e,t){var a=this.getArea(e,t),r=this.noiseByArea[a];return this.getColor(1,a,r)}getColor(e,t,a){var r=this.isRevertedByArea[t];return this.mixColors(r,e,a)}getIterationPalette(){return 1==palette.length?palette[0]:palette[currIter%2]}mixColors(e,t,a){var r=this.getIterationPalette();return e?multipleMixColors(r[0],r[1],t,a):multipleMixColors(r[2],r[3],t,a)}}class SimpleLinesScene extends Scene{constructor(){super(),this.lines=[],this.createLines()}createLines(){for(var e=fxRandRanged(100,200),t=randomInt(30,70),a=0;a<t;a++){var r=map(noise(.1*a),0,1,0,2*Math.PI),[i,n]=getDecartShifted(e,r,0,0);this.lines.push(new Line(r+Math.PI/2,i,n)),r-=Math.PI;var[i,n]=getDecartShifted(e,r,0,0);this.lines.push(new Line(r+Math.PI/2,i,n))}}getArea(e,t){var a=this.getAreaByDelimeter(e,t),r=0;for(var i of this.lines)r+=i.isGreater(e,t);return(a+r)%4}}class TwoFocusesScene extends SimpleLinesScene{createLines(){for(var e=randomInt(300,600),t=0,a=0,r=randomInt(11,51),i=0;i<r;i++){var n=map(noise(.1*i),0,1,0,2*Math.PI),[s,h]=getDecartShifted(e,n,t,a);this.lines.push(new Line(n+Math.PI/2,s,h)),n-=Math.PI;var[s,h]=getDecartShifted(e,n,0,0);this.lines.push(new Line(n+Math.PI/2,s,h))}var o=fxRandRanged(0,2*Math.PI),[t,a]=getDecartShifted(e,o,0,0);for(r=randomInt(11,51),i=0;i<r;i++){n=fxRandRanged(0,2*Math.PI);var[s,h]=getDecartShifted(e,n,0,0);this.lines.push(new Line(n+Math.PI/2,t,a)),n-=Math.PI;var[s,h]=getDecartShifted(e,n,0,0);this.lines.push(new Line(n+Math.PI/2,t,a))}}}class LowAmountScene extends SimpleLinesScene{createLines(){for(var e=randomInt(100,400),t=0;t<7;t++){var a=fxRandRanged(0,2*Math.PI),[r,i]=getDecartShifted(e,a,0,0);this.lines.push(new Line(a+Math.PI/2,r,i)),a-=Math.PI;var[r,i]=getDecartShifted(e,a,0,0);this.lines.push(new Line(a+Math.PI/2,r,i))}}}class DoubleLineScene extends SimpleLinesScene{createLines(){for(var e=randomInt(80,150),t=randomInt(15,50),a=0;a<t;a++){var r=map(noise(a),0,1,0,2*Math.PI),[i,n]=getDecartShifted(e,r,0,0),s=new Line(r+Math.PI/2,i,n);r-=Math.PI;var[i,n]=getDecartShifted(e,r,0,0),h=new Line(r+Math.PI/2,i,n);this.lines.push([s,h]);var[i,n]=getDecartShifted(e+30,r,0,0),[i,n]=(s=new Line(r+Math.PI/2,i,n),getDecartShifted(e+50,r,0,0));h=new Line(r+Math.PI/2,i,n),this.lines.push([s,h])}}getArea(e,t){var a=this.getAreaByDelimeter(e,t),r=0;for(var i of this.lines){var n=i[0],s=i[1];(!n.isGreater(e,t)&s.isGreater(e,t)||n.isGreater(e,t)&!s.isGreater(e,t))&&r++}return(a+r)%4}}class ManyLinesScene extends DoubleLineScene{createLines(){for(var e=randomInt(130,250),t=randomInt(70,100),a=0;a<t;a++){if(a<10)var r=map(noise(a),0,1,0,2*Math.PI);else r=map(noise(.05*a),0,1,0,2*Math.PI);var[i,n]=getDecartShifted(e,r,0,0),s=new Line(r+Math.PI/2,i,n);r-=Math.PI;var[i,n]=getDecartShifted(e,r,0,0),h=new Line(r+Math.PI/2,i,n);this.lines.push([s,h])}}}class RectShapesScene extends DoubleLineScene{createLines(){var e=150,t=randomInt(2,3);for(e=10;e<1e3;e+=randomInt(80,200))for(var a=0;a<t;a++){var r=fxRandRanged(0,2*Math.PI),[i,n]=getDecartShifted(e,r,0,0),s=new Line(r+Math.PI/2,i,n);r-=Math.PI;var[i,n]=getDecartShifted(e,r,0,0),h=new Line(r+Math.PI/2,i,n);this.lines.push([s,h])}}}class CirclesScene extends DoubleLineScene{createLines(){for(var e of[10,100,200,500])for(var t=0;t<10;t++){var a=fxRandRanged(0,2*Math.PI),[r,i]=getDecartShifted(e,a,0,0),n=new Line(a+Math.PI/2,r,i);a-=Math.PI;var[r,i]=getDecartShifted(e,a,0,0),s=new Line(a+Math.PI/2,r,i);this.lines.push([n,s])}}}class MonoAngleScene extends DoubleLineScene{createLines(){for(var e=0,t=0,a=randomInt(100,300),r=fxRandRanged(0,Math.PI/2),i=0;i<40;i++){var n=fxRandRanged(-Math.PI/5,Math.PI/5)+r,[s,h]=getDecartShifted(a,n,e,t),o=new Line(n+Math.PI/2,s,h);n-=Math.PI;var[s,h]=getDecartShifted(a,n,e,t),c=new Line(n+Math.PI/2,s,h);this.lines.push([o,c])}for(a=300,e=xBufferSize/2,t=yBufferSize/2,i=0;i<10;i++){n=fxRandRanged(Math.PI/2,Math.PI);var[s,h]=getDecartShifted(a,n,e,t);o=new Line(n+Math.PI/2,s,h),n-=Math.PI;var[s,h]=getDecartShifted(a,n,e,t);c=new Line(n+Math.PI/2,s,h),this.lines.push([o,c])}for(a=300,e=-xBufferSize/2,t=-yBufferSize/2,i=0;i<10;i++){n=fxRandRanged(Math.PI/2,Math.PI);var[s,h]=getDecartShifted(a,n,e,t);o=new Line(n+Math.PI/2,s,h),n-=Math.PI;var[s,h]=getDecartShifted(a,n,e,t);c=new Line(n+Math.PI/2,s,h),this.lines.push([o,c])}}}class SquaresScene extends DoubleLineScene{createLines(){var e=300,t=randomFromRange([1,2,3]),a=randomFromRange([100,150,200]);for(e=10;e<700;e+=a)for(var r=0;r<t;r++){var i=map(noise(r),0,1,0,2*Math.PI),[n,s]=getDecartShifted(e,i,0,0),h=new Line(i+Math.PI/2,n,s);i-=Math.PI;var[n,s]=getDecartShifted(e,i,0,0),o=new Line(i+Math.PI/2,n,s);this.lines.push([h,o]),i+=Math.PI/2;var[n,s]=getDecartShifted(e,i,0,0);h=new Line(i+Math.PI/2,n,s),i-=Math.PI;var[n,s]=getDecartShifted(e,i,0,0);o=new Line(i+Math.PI/2,n,s),this.lines.push([h,o])}}}class DividedScene extends DoubleLineScene{constructor(){super();var e=fxRandRanged(0,2*Math.PI);this.mainLine=new Line(e,0,0),this.singleLines=this.createSingleLines(0,50),this.doubleLines=this.createLines(randomInt(150,300),randomInt(20,50))}createSingleLines(e,t){for(var a=[],r=0;r<t;r++){var i=fxRandRanged(0,2*Math.PI),[n,s]=getDecartShifted(e,i,0,0);a.push(new Line(i+Math.PI/2,n,s)),i-=Math.PI;var[n,s]=getDecartShifted(e,i,0,0);a.push(new Line(i+Math.PI/2,n,s))}return a}createLines(e,t){for(var a=[],r=0;r<t;r++){var i=map(noise(r),0,1,0,2*Math.PI),[n,s]=getDecartShifted(e,i,0,0),h=new Line(i+Math.PI/2,n,s);i-=Math.PI;var[n,s]=getDecartShifted(e,i,0,0),o=new Line(i+Math.PI/2,n,s);a.push([h,o]);var[n,s]=getDecartShifted(e+30,i,0,0),[n,s]=(h=new Line(i+Math.PI/2,n,s),getDecartShifted(e+50,i,0,0));o=new Line(i+Math.PI/2,n,s),a.push([h,o])}return a}getArea(e,t){var a=this.getAreaByDelimeter(e,t);if(this.mainLine.isGreater(e,t))for(var r of this.singleLines)a+=r.isGreater(e,t);else for(var i of this.doubleLines){var n=i[0],s=i[1];(!n.isGreater(e,t)&s.isGreater(e,t)||n.isGreater(e,t)&!s.isGreater(e,t))&&a++}return a%4}}class CircleDividedScene extends SimpleLinesScene{constructor(){super(),this.rStep=fxRandRanged(300,450),this.circleRadiuses=[],this.linesArr=[];for(var e=this.rStep;e<xBufferSize;e+=this.rStep)this.circleRadiuses.push(e),this.linesArr.push(this.createLines(fxRandRanged(1,e),fxRandRanged(10,70)))}createLines(e,t){for(var a=[],r=0;r<t;r++){var i=fxRandRanged(0,2*Math.PI),[n,s]=getDecartShifted(e,i,0,0);a.push(new Line(i+Math.PI/2,n,s)),i-=Math.PI;var[n,s]=getDecartShifted(e,i,0,0);a.push(new Line(i+Math.PI/2,n,s))}return a}getArea(e,t){for(var a=this.getAreaByDelimeter(e,t),r=0;r<this.circleRadiuses.length;r++)if(inCircle(this.circleRadiuses[r]-this.rStep,this.circleRadiuses[r],0,0,e,t)){for(var i of this.linesArr[r])a+=i.isGreater(e,t);break}return a%4}}class DoubleCircle extends DoubleLineScene{createLines(){for(var e=0,t=0,a=randomFromRange([20,30]),r=0;r<a;r++){var i=fxRandRanged(0,2*Math.PI);[e,t]=getDecartShifted(300,i,0,0);var n=map(noise(r),0,1,30,300),s=i+Math.PI/2,[h,o]=getDecartShifted(n,s,e,t),c=new Line(s+Math.PI/2,h,o);s-=Math.PI;var[h,o]=getDecartShifted(n,s,e,t),l=new Line(s+Math.PI/2,h,o);this.lines.push([c,l]);var[h,o]=getDecartShifted(n+30,s,e,t),[h,o]=(c=new Line(s+Math.PI/2,h,o),getDecartShifted(n+50,s,e,t));l=new Line(s+Math.PI/2,h,o),this.lines.push([c,l])}}}class SpiralCorners extends SimpleLinesScene{createLines(){for(var e=100,t=randomFromRange([Math.PI/4,Math.PI/8]),a=randomInt(5,12),r=randomInt(50,150),i=fxRandRanged(0,2*Math.PI),n=randomFromRange([Math.PI/2,Math.PI/4,Math.PI/8]),s=0;s<a;s++){for(var h=0;h<2*Math.PI;h+=t){var o=h+i,[c,l]=getDecartShifted(e,o,0,0),d=new Line(o+Math.PI/2,c,l),f=o-n,[c,l]=getDecartShifted(e,f,0,0),I=new Line(f+Math.PI/2,c,l);this.lines.push([d,I])}e+=r}}getArea(e,t){var a=this.getAreaByDelimeter(e,t),r=0;for(var i of this.lines){var n=i[0],s=i[1];!n.isGreater(e,t)&s.isGreater(e,t)&&r++}return(a+r)%4}}class ThinLinesScene extends DoubleLineScene{createLines(){for(var e of[130,160,190,220])for(var t=0;t<5;t++){var a=map(noise(t),0,1,0,2*Math.PI),[r,i]=getDecartShifted(e,a,0,0),n=new Line(a+Math.PI/2,r,i);a-=Math.PI;var[r,i]=getDecartShifted(e,a,0,0),s=new Line(a+Math.PI/2,r,i);this.lines.push([n,s]);var[r,i]=getDecartShifted(e+e,a,0,0),[r,i]=(n=new Line(a+Math.PI/2,r,i),getDecartShifted(e+e+50,a,0,0));s=new Line(a+Math.PI/2,r,i),this.lines.push([n,s])}}}